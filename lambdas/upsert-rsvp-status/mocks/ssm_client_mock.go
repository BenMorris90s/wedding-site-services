// Code generated by MockGen. DO NOT EDIT.
// Source: ssm.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	ssm "github.com/aws/aws-sdk-go-v2/service/ssm"
	gomock "github.com/golang/mock/gomock"
)

// MockSSMClientInterface is a mock of SSMClientInterface interface.
type MockSSMClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSSMClientInterfaceMockRecorder
}

// MockSSMClientInterfaceMockRecorder is the mock recorder for MockSSMClientInterface.
type MockSSMClientInterfaceMockRecorder struct {
	mock *MockSSMClientInterface
}

// NewMockSSMClientInterface creates a new mock instance.
func NewMockSSMClientInterface(ctrl *gomock.Controller) *MockSSMClientInterface {
	mock := &MockSSMClientInterface{ctrl: ctrl}
	mock.recorder = &MockSSMClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSSMClientInterface) EXPECT() *MockSSMClientInterfaceMockRecorder {
	return m.recorder
}

// GetParameter mocks base method.
func (m *MockSSMClientInterface) GetParameter(ctx context.Context, params *ssm.GetParameterInput, optFns ...func(*ssm.Options)) (*ssm.GetParameterOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetParameter", varargs...)
	ret0, _ := ret[0].(*ssm.GetParameterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParameter indicates an expected call of GetParameter.
func (mr *MockSSMClientInterfaceMockRecorder) GetParameter(ctx, params interface{}, optFns ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParameter", reflect.TypeOf((*MockSSMClientInterface)(nil).GetParameter), varargs...)
}
